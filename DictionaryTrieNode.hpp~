/* Description: This is a program that defines a node that holds
 * a single letter, in an autocomplete program that uses tries
 * to store words.
 *
 * Name: Luhao Wang
 * Email: luw055@ucsd.edu
 * Date: April 26, 2019
 * Sources: Piazza
 */

#ifndef DICTIONARYTRIENODE_HPP
#define DICTIONARYTRIENODE_HPP
#include <iostream>

using namespace std;

template<typename Data>

/* DictionaryTrieNode class defines the parent, left, and right children of the
 * current node, as well as the data stored in the node and the 
 * method to find the node in the tree with the next smallest element.
 */
class DictionaryTrieNode {

	public:

		// Constructor.  Initialize a TrieNode with given frequency and Flag
		BSTNode(const Data & d) : data(d) {
		    parent = left = right = nullptr;	
		}

		BSTNode<Data>* left;
		BSTNode<Data>* right;
		BSTNode<Data>* parent;
		Data const data;   // the const Data in this node.

};
#endif // DICTIONARYTRIENODE_HPP

